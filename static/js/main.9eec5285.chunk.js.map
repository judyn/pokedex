{"version":3,"sources":["pages/about.jsx","pages/home.jsx","pages/pokemon.jsx","App.js","serviceWorker.js","index.js"],"names":["AboutPage","react_default","a","createElement","Component","Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","pokemon","_this2","fetch","method","then","response","json","setState","results","row","gutter","map","mon","i","col","span","key","card","title","name","size","Link","to","concat","src","alt","Meta","Card","PokemonPage","pokeStats","weight","height","sprite","speed","spdef","spatk","defense","attack","hp","pokeName","match","params","sprites","front_default","stats","base_stat","console","log","style","width","actions","icon","type","description","list","Item","progress","percent","format","toFixed","Content","Layout","Sider","App","collapsed","toggle","BrowserRouter","className","layout","breakpoint","collapsedWidth","menu","theme","mode","margin","padding","background","minHeight","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9eec5285.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass AboutPage extends Component {\r\n  render(){\r\n\r\n    return(\r\n      <div>About</div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default AboutPage;","import React, { Component } from 'react';\r\nimport {Card, Col, Row} from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Home extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      pokemon: []\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch('https://pokeapi.co/api/v2/pokemon/?limit=151',{\r\n      method:'GET',\r\n    })\r\n    .then( response => response.json())\r\n    .then( json => this.setState({ pokemon: json.results }))\r\n  }\r\n\r\n  render(){\r\n    const { pokemon } = this.state;\r\n\r\n    return(\r\n      <div>\r\n        <Row gutter={16}>\r\n        {pokemon.map( (mon,i) => \r\n          <Col span={6} key={i}>\r\n            <Card title={mon.name} size=\"small\" >             \r\n              <div>\r\n                <Link to={`/p/${mon.name}`} >\r\n                <img src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${i + 1}.png`} alt={mon.name}/>\r\n                </Link>\r\n              </div>                  \r\n            </Card>\r\n          </Col>\r\n        )}    \r\n        </Row>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport {Card, Icon, Progress, List} from 'antd';\r\n\r\nconst { Meta } = Card;\r\n\r\nclass PokemonPage extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      pokeStats: [],\r\n      name: '',\r\n      weight:null,\r\n      height:null,\r\n      sprite:'',\r\n      speed:'',\r\n      spdef: '',\r\n      spatk: '',\r\n      defense: '',\r\n      attack: '',\r\n      hp: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    const pokeName = `https://pokeapi.co/api/v2/pokemon/${this.props.match.params.pokemon}`;\r\n   \r\n    fetch(pokeName,{\r\n      method:'GET',\r\n    })\r\n    .then( response => response.json())\r\n    .then( json => this.setState({ \r\n      pokeStats: json, \r\n      name:json.name, \r\n      height:json.height, \r\n      weight:json.weight, \r\n      sprite:json.sprites.front_default,\r\n      speed: json.stats[0].base_stat,\r\n      spdef: json.stats[1].base_stat,\r\n      spatk: json.stats[2].base_stat,\r\n      defense: json.stats[3].base_stat,\r\n      attack: json.stats[4].base_stat,\r\n      hp: json.stats[5].base_stat\r\n    }))\r\n  }\r\n\r\n  render(){\r\n\r\n    console.log(this.state.pokeStats);\r\n    \r\n    return(\r\n      <div>\r\n      <Card\r\n      style={{ width: 300 }}\r\n      actions={[<Icon type=\"setting\" />, <Icon type=\"edit\" />, <Icon type=\"ellipsis\" />]}\r\n      \r\n      >\r\n      <img src={this.state.sprite} alt={this.state.name}/>\r\n      <Meta\r\n        //avatar={<Avatar src={`https://img.pokemondb.net/sprites/sun-moon/icon/gyarados.png`}/>}\r\n        title={this.state.name}\r\n        description=\"This is the description\"\r\n      />\r\n    </Card>\r\n        \r\n    <Card>\r\n    <List>\r\n    <List.Item>\r\n      <List.Item.Meta title=\"HP\" description={<Progress percent={this.state.hp} format={percent => percent}/>}/>\r\n    </List.Item>  \r\n    <List.Item>\r\n      <List.Item.Meta title=\"Speed\" description={<Progress percent={this.state.speed} format={percent => percent}/>}/>\r\n    </List.Item>\r\n    <List.Item>\r\n      <List.Item.Meta title=\"Attack\" description={<Progress percent={this.state.attack} format={percent => percent}/>}/>\r\n    </List.Item>\r\n    <List.Item>\r\n      <List.Item.Meta title=\"Defense\" description={<Progress percent={this.state.defense} format={percent => percent}/>}/>\r\n    </List.Item>\r\n    <List.Item>\r\n      <List.Item.Meta title=\"Special Attack\" description={<Progress percent={this.state.spatk} format={percent => percent}/>}/>\r\n    </List.Item>\r\n    <List.Item>\r\n      <List.Item.Meta title=\"Special Defense\" description={<Progress percent={this.state.spdef} format={percent => percent}/>}/>\r\n    </List.Item>\r\n  </List>\r\n    </Card>\r\n        \r\n\r\n        <div>Weight: {(this.state.weight /4.536).toFixed(2)} lbs</div>\r\n        <div>Height: {(this.state.height/3.048).toFixed(2)} ft</div>\r\n        \r\n        \r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default PokemonPage;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport { Layout, Menu } from 'antd';\nimport AboutPage from './pages/about';\nimport Home from './pages/home';\nimport PokemonPage from './pages/pokemon';\nimport './App.css';\n\nconst {\n  Content, Sider,\n} = Layout;\n\nclass App extends Component {\n  state = {\n    collapsed: false,\n  };\n  \n  toggle = () => {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  }\n\n  render() {\n  \n    return (\n      <Router className=\"App\">\n        <Layout>          \n          <Sider breakpoint=\"lg\"\n            collapsedWidth=\"0\"\n          >\n            <Menu\n              theme=\"dark\"\n              mode=\"inline\"\n            >\n              <Menu.Item key=\"2\"><Link to=\"/pokedex\">Home</Link></Menu.Item>\n              <Menu.Item key=\"1\"><Link to=\"/about\">About</Link></Menu.Item>  \n            </Menu>\n          </Sider>\n\n          <Layout>\n            <Content style={{ margin: '0 16px' }}>\n              <div style={{ padding: 24, background: '#fff', minHeight: '100vh' }}>\n                <Route exact path=\"/about/\" component={AboutPage}/>\n                <Route exact path=\"/pokedex/\" component={Home}/>\n                <Route exact path=\"/p/:pokemon/\" component={PokemonPage}></Route>\n              </div>\n            </Content>        \n          </Layout>\n\n        </Layout>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}